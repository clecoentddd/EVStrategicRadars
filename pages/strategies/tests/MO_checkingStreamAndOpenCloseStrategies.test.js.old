import { CreateStrategyStream, CreateNewVersionOfStrategy } from '../model/strategy';

async function testStrategyStream() {
  // Command to create a new strategy stream
  const streamCommand = {
    radar_id: 'radar-123',
    name: 'Test Strategy Stream',
    description: 'Description of the test strategy stream',
    level: '1',
  };

  let stream_id_to_used;
  // Create a new strategy stream
  const savedStrategyStream = await CreateStrategyStream(streamCommand);

  // Check if the stream is created successfully
    Expect(savedStrategyStream.state).tobe('Open');
    console.log('Strategy stream created successfully:', savedStrategyStream);
    stream_id_to_used = savedStrategyStream.stream_id;

    // Command to create the first version of the strategy
    const firstVersionCommand = {
      stream_id: savedStrategyStream.stream_id,
      name: 'First Version of Strategy',
      description: 'Description of the first version of the strategy',
      period: '2025',
    };

    // Create the first version of the strategy
    const firstVersion = await CreateNewVersionOfStrategy(firstVersionCommand);

    console.log('First version of strategy created successfully:', firstVersion);
    // Check if the first version is created successfully
    expect(firstVersion.state).toBe('Open');
      

      // Command to create the second version of the strategy
    const secondVersionCommand = {
        stream_id: firstVersion.stream_id,
        name: 'Second Version of Strategy',
        description: 'Description of the second version of the strategy',
        period: '2026'
      };

      // Create the second version of the strategy
      const { success: secondVersionSuccess, savedStrategy: secondVersion } = await CreateNewVersionOfStrategy(secondVersionCommand);

      // Check if the second version is created successfully and the first version is closed
      if (secondVersionSuccess && secondVersion.version === 2 && secondVersion.state === 'Open') {
        console.log('Second version of strategy created successfully:', secondVersion);

        // Verify that the first version is closed
        if (firstVersion.state === 'Closed') {
          console.log('First version is closed successfully.');
        } else {
          console.error('First version is not closed.');
        }
      } else {
        console.error('Failed to create the second version of the strategy.');
      }
    } else {
      console.error('Failed to create the first version of the strategy.');
    }
  } else {
    console.error('Failed to create the strategy stream.');
  }
};

// Run the test
testStrategyStream();
